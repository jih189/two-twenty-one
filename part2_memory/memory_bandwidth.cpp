#include <stdint.h>
#include <iostream>
#include <time.h>
#include <sched.h>
#include <unistd.h>
#include <signal.h>
#include <sys/wait.h>
#include <sys/types.h>
#include <math.h>

using namespace std;
unsigned int high, low, id;
#define L3CACHSIZE 4194304 
static inline uint64_t start_timer(){
     __asm__ volatile( "cpuid \n\t"
               "rdtsc \n\t"
               "mov %%edx, %0 \n\t"
               "mov %%eax, %1 \n\t"
               : "=r"(high), "=r"(low)
               :: "%rax", "%rbx", "%rcx", "%rdx"
               );
     return ((uint64_t)high <<32) | low;
}
static inline uint64_t end_timer(){
     __asm__ volatile( 
               "rdtscp \n\t"
               "mov %%edx, %0 \n\t"
               "mov %%eax, %1 \n\t"
               "cpuid \n\t"
               : "=r"(high), "=r"(low)
               :: "%rax", "%rbx", "rcx", "%rdx"
               );
     return ((uint64_t)high <<32) | low;
}

int main(int argc, char *argv[]){
     double read_delay = 0;
     double write_delay = 0;
     for(int j = 0; j < 100; j++){
          uint64_t offset = 1024*512;
          // create a memory on heap
          //    if(argv[1][0] == '0'){
          int *mem1 = new int[(int)pow(2,30)];
          int index = 0;
          for(int i = 0; i < (int)pow(2,11); i++){
               mem1[index] = 0;
               index += 1024*512;
          }
          uint64_t start1, end1;
          start1 = start_timer();
          mem1[0] = 6;
          mem1[offset] = 6;
          mem1[2*offset] = 6;
          mem1[3*offset] = 6;
          mem1[4*offset] = 6;
          mem1[5*offset] = 6;
          mem1[6*offset] = 6;
          mem1[7*offset] = 6;
          mem1[8*offset] = 6;
          mem1[9*offset] = 6;
          mem1[10*offset] = 6;
          mem1[11*offset] = 6;
          mem1[12*offset] = 6;
          mem1[13*offset] = 6;
          mem1[14*offset] = 6;
          mem1[15*offset] = 6;
          mem1[16*offset] = 6;
          mem1[17*offset] = 6;
          mem1[18*offset] = 6;
          mem1[19*offset] = 6;
          mem1[20*offset] = 6;
          mem1[21*offset] = 6;
          mem1[22*offset] = 6;
          mem1[23*offset] = 6;
          mem1[24*offset] = 6;
          mem1[25*offset] = 6;
          mem1[26*offset] = 6;
          mem1[27*offset] = 6;
          mem1[28*offset] = 6;
          mem1[29*offset] = 6;
          mem1[30*offset] = 6;
          mem1[31*offset] = 6;
          mem1[32*offset] = 6;
          mem1[33*offset] = 6;
          mem1[34*offset] = 6;
          mem1[35*offset] = 6;
          mem1[36*offset] = 6;
          mem1[37*offset] = 6;
          mem1[38*offset] = 6;
          mem1[39*offset] = 6;
          mem1[40*offset] = 6;
          mem1[41*offset] = 6;
          mem1[42*offset] = 6;
          mem1[43*offset] = 6;
          mem1[44*offset] = 6;
          mem1[45*offset] = 6;
          mem1[46*offset] = 6;
          mem1[47*offset] = 6;
          mem1[48*offset] = 6;
          mem1[49*offset] = 6;
                mem1[50*offset] = 6;
                mem1[51*offset] = 6;
                mem1[52*offset] = 6;
                mem1[53*offset] = 6;
                mem1[54*offset] = 6;
                mem1[55*offset] = 6;
                mem1[56*offset] = 6;
                mem1[57*offset] = 6;
                mem1[58*offset] = 6;
                mem1[59*offset] = 6;
                mem1[60*offset] = 6;
                mem1[61*offset] = 6;
                mem1[62*offset] = 6;
                mem1[63*offset] = 6;
                mem1[64*offset] = 6;
                mem1[65*offset] = 6;
                mem1[66*offset] = 6;
                mem1[67*offset] = 6;
                mem1[68*offset] = 6;
                mem1[69*offset] = 6;
                mem1[70*offset] = 6;
                mem1[71*offset] = 6;
                mem1[72*offset] = 6;
                mem1[73*offset] = 6;
                mem1[74*offset] = 6;
                mem1[75*offset] = 6;
                mem1[76*offset] = 6;
                mem1[77*offset] = 6;
                mem1[78*offset] = 6;
                mem1[79*offset] = 6;
                mem1[80*offset] = 6;
                mem1[81*offset] = 6;
                mem1[82*offset] = 6;
                mem1[83*offset] = 6;
                mem1[84*offset] = 6;
                mem1[85*offset] = 6;
                mem1[86*offset] = 6;
                mem1[87*offset] = 6;
                mem1[88*offset] = 6;
                mem1[89*offset] = 6;
                mem1[90*offset] = 6;
                mem1[91*offset] = 6;
                mem1[92*offset] = 6;
                mem1[93*offset] = 6;
                mem1[94*offset] = 6;
                mem1[95*offset] = 6;
                mem1[96*offset] = 6;
                mem1[97*offset] = 6;
                mem1[98*offset] = 6;
                mem1[99*offset] = 6;                
                mem1[100*offset] = 6;
                mem1[101*offset] = 6;
                mem1[102*offset] = 6;
                mem1[103*offset] = 6;
                mem1[104*offset] = 6;
                mem1[105*offset] = 6;
                mem1[106*offset] = 6;
                mem1[107*offset] = 6;
                mem1[108*offset] = 6;
                mem1[109*offset] = 6;
                mem1[110*offset] = 6;
                mem1[111*offset] = 6;
                mem1[112*offset] = 6;
                mem1[113*offset] = 6;
                mem1[114*offset] = 6;
                mem1[115*offset] = 6;
                mem1[116*offset] = 6;
                mem1[117*offset] = 6;
                mem1[118*offset] = 6;
                mem1[119*offset] = 6;
                mem1[120*offset] = 6;
                mem1[121*offset] = 6;
                mem1[122*offset] = 6;
                mem1[123*offset] = 6;
                mem1[124*offset] = 6;
                mem1[125*offset] = 6;
                mem1[126*offset] = 6;
                mem1[127*offset] = 6;
                mem1[128*offset] = 6;
                mem1[129*offset] = 6;
                mem1[130*offset] = 6;
                mem1[131*offset] = 6;
                mem1[132*offset] = 6;
                mem1[133*offset] = 6;
                mem1[134*offset] = 6;
                mem1[135*offset] = 6;
                mem1[136*offset] = 6;
                mem1[137*offset] = 6;
                mem1[138*offset] = 6;
                mem1[139*offset] = 6;
                mem1[140*offset] = 6;
                mem1[141*offset] = 6;
                mem1[142*offset] = 6;
                mem1[143*offset] = 6;
                mem1[144*offset] = 6;
                mem1[145*offset] = 6;
                mem1[146*offset] = 6;
                mem1[147*offset] = 6;
                mem1[148*offset] = 6;
                mem1[149*offset] = 6;
                mem1[150*offset] = 6;
                mem1[151*offset] = 6;
                mem1[152*offset] = 6;
                mem1[153*offset] = 6;
                mem1[154*offset] = 6;
                mem1[155*offset] = 6;
                mem1[156*offset] = 6;
                mem1[157*offset] = 6;
                mem1[158*offset] = 6;
                mem1[159*offset] = 6;
                mem1[160*offset] = 6;
                mem1[161*offset] = 6;
                mem1[162*offset] = 6;
                mem1[163*offset] = 6;
                mem1[164*offset] = 6;
                mem1[165*offset] = 6;
                mem1[166*offset] = 6;
                mem1[167*offset] = 6;
                mem1[168*offset] = 6;
                mem1[169*offset] = 6;
                mem1[170*offset] = 6;
                mem1[171*offset] = 6;
                mem1[172*offset] = 6;
                mem1[173*offset] = 6;
                mem1[174*offset] = 6;
                mem1[175*offset] = 6;
                mem1[176*offset] = 6;
                mem1[177*offset] = 6;
                mem1[178*offset] = 6;
                mem1[179*offset] = 6;
                mem1[180*offset] = 6;
                mem1[181*offset] = 6;
                mem1[182*offset] = 6;
                mem1[183*offset] = 6;
                mem1[184*offset] = 6;
                mem1[185*offset] = 6;
                mem1[186*offset] = 6;
                mem1[187*offset] = 6;
                mem1[188*offset] = 6;
                mem1[189*offset] = 6;
                mem1[190*offset] = 6;
                mem1[191*offset] = 6;
                mem1[192*offset] = 6;
                mem1[193*offset] = 6;
                mem1[194*offset] = 6;
                mem1[195*offset] = 6;
                mem1[196*offset] = 6;
                mem1[197*offset] = 6;
                mem1[198*offset] = 6;
                mem1[199*offset] = 6;
                mem1[200*offset] = 6;
                mem1[201*offset] = 6;
                mem1[202*offset] = 6;
                mem1[203*offset] = 6;
                mem1[204*offset] = 6;
                mem1[205*offset] = 6;
                mem1[206*offset] = 6;
                mem1[207*offset] = 6;
                mem1[208*offset] = 6;
                mem1[209*offset] = 6;
                mem1[210*offset] = 6;
                mem1[211*offset] = 6;
                mem1[212*offset] = 6;
                mem1[213*offset] = 6;
                mem1[214*offset] = 6;
                mem1[215*offset] = 6;
                mem1[216*offset] = 6;
                mem1[217*offset] = 6;
                mem1[218*offset] = 6;
                mem1[219*offset] = 6;
                mem1[220*offset] = 6;
                mem1[221*offset] = 6;
                mem1[222*offset] = 6;
                mem1[223*offset] = 6;
                mem1[224*offset] = 6;
                mem1[225*offset] = 6;
                mem1[226*offset] = 6;
                mem1[227*offset] = 6;
                mem1[228*offset] = 6;
                mem1[229*offset] = 6;
                mem1[230*offset] = 6;
                mem1[231*offset] = 6;
                mem1[232*offset] = 6;
                mem1[233*offset] = 6;
                mem1[234*offset] = 6;
                mem1[235*offset] = 6;
                mem1[236*offset] = 6;
                mem1[237*offset] = 6;
                mem1[238*offset] = 6;
                mem1[239*offset] = 6;
                mem1[240*offset] = 6;
                mem1[241*offset] = 6;
                mem1[242*offset] = 6;
                mem1[243*offset] = 6;
                mem1[244*offset] = 6;
                mem1[245*offset] = 6;
                mem1[246*offset] = 6;
                mem1[247*offset] = 6;
                mem1[248*offset] = 6;
                mem1[249*offset] = 6;
                mem1[250*offset] = 6;
                mem1[521*offset] = 6;
                mem1[252*offset] = 6;
                mem1[253*offset] = 6;
                mem1[254*offset] = 6;
                mem1[255*offset] = 6;
                mem1[256*offset] = 6;
                mem1[257*offset] = 6;
                mem1[258*offset] = 6;
                mem1[259*offset] = 6;
                mem1[260*offset] = 6;
                mem1[261*offset] = 6;
                mem1[262*offset] = 6;
                mem1[263*offset] = 6;
                mem1[264*offset] = 6;
                mem1[265*offset] = 6;
                mem1[266*offset] = 6;
                mem1[267*offset] = 6;
                mem1[268*offset] = 6;
                mem1[269*offset] = 6;
                mem1[270*offset] = 6;
                mem1[271*offset] = 6;
                mem1[272*offset] = 6;
                mem1[273*offset] = 6;
                mem1[274*offset] = 6;
                mem1[275*offset] = 6;
                mem1[276*offset] = 6;
                mem1[277*offset] = 6;
                mem1[278*offset] = 6;
                mem1[279*offset] = 6;
                mem1[280*offset] = 6;
                mem1[281*offset] = 6;
                mem1[282*offset] = 6;
                mem1[283*offset] = 6;
                mem1[284*offset] = 6;
                mem1[285*offset] = 6;
                mem1[286*offset] = 6;
                mem1[287*offset] = 6;
                mem1[288*offset] = 6;
                mem1[289*offset] = 6;
                mem1[290*offset] = 6;
                mem1[291*offset] = 6;
                mem1[292*offset] = 6;
                mem1[293*offset] = 6;
                mem1[294*offset] = 6;
                mem1[295*offset] = 6;
                mem1[296*offset] = 6;
                mem1[297*offset] = 6;
                mem1[298*offset] = 6;
                mem1[299*offset] = 6;
                mem1[300*offset] = 6;
                mem1[301*offset] = 6;
                mem1[302*offset] = 6;
                mem1[303*offset] = 6;
                mem1[304*offset] = 6;
                mem1[305*offset] = 6;
                mem1[306*offset] = 6;
                mem1[307*offset] = 6;
                mem1[308*offset] = 6;
                mem1[309*offset] = 6;
                mem1[310*offset] = 6;
                mem1[311*offset] = 6;
                mem1[312*offset] = 6;
                mem1[313*offset] = 6;
                mem1[314*offset] = 6;
                mem1[315*offset] = 6;
                mem1[316*offset] = 6;
                mem1[317*offset] = 6;
                mem1[318*offset] = 6;
                mem1[319*offset] = 6;
                mem1[320*offset] = 6;
                mem1[321*offset] = 6;
                mem1[322*offset] = 6;
                mem1[323*offset] = 6;
                mem1[324*offset] = 6;
                mem1[325*offset] = 6;
                mem1[326*offset] = 6;
                mem1[327*offset] = 6;
                mem1[328*offset] = 6;
                mem1[329*offset] = 6;
                mem1[330*offset] = 6;
                mem1[331*offset] = 6;
                mem1[332*offset] = 6;
                mem1[333*offset] = 6;
                mem1[334*offset] = 6;
                mem1[335*offset] = 6;
                mem1[336*offset] = 6;
                mem1[337*offset] = 6;
                mem1[338*offset] = 6;
                mem1[339*offset] = 6;
                mem1[340*offset] = 6;
                mem1[341*offset] = 6;
                mem1[342*offset] = 6;
                mem1[343*offset] = 6;
                mem1[344*offset] = 6;
                mem1[345*offset] = 6;
                mem1[346*offset] = 6;
                mem1[347*offset] = 6;
                mem1[348*offset] = 6;
                mem1[349*offset] = 6;
                mem1[350*offset] = 6;
                mem1[351*offset] = 6;
                mem1[352*offset] = 6;
                mem1[353*offset] = 6;
                mem1[354*offset] = 6;
                mem1[355*offset] = 6;
                mem1[356*offset] = 6;
                mem1[357*offset] = 6;
                mem1[358*offset] = 6;
                mem1[359*offset] = 6;
                mem1[360*offset] = 6;
                mem1[361*offset] = 6;
                mem1[362*offset] = 6;
                mem1[363*offset] = 6;
                mem1[364*offset] = 6;
                mem1[365*offset] = 6;
                mem1[366*offset] = 6;
                mem1[367*offset] = 6;
                mem1[368*offset] = 6;
                mem1[369*offset] = 6;
                mem1[370*offset] = 6;
                mem1[371*offset] = 6;
                mem1[372*offset] = 6;
                mem1[373*offset] = 6;
                mem1[374*offset] = 6;
                mem1[375*offset] = 6;
                mem1[376*offset] = 6;
                mem1[377*offset] = 6;
                mem1[378*offset] = 6;
                mem1[379*offset] = 6;
                mem1[380*offset] = 6;
                mem1[381*offset] = 6;
                mem1[382*offset] = 6;
                mem1[383*offset] = 6;
                mem1[384*offset] = 6;
                mem1[385*offset] = 6;
                mem1[386*offset] = 6;
                mem1[387*offset] = 6;
                mem1[388*offset] = 6;
                mem1[389*offset] = 6;
                mem1[390*offset] = 6;
                mem1[391*offset] = 6;
                mem1[392*offset] = 6;
                mem1[393*offset] = 6;
                mem1[394*offset] = 6;
                mem1[395*offset] = 6;
                mem1[396*offset] = 6;
                mem1[397*offset] = 6;
                mem1[398*offset] = 6;
                mem1[399*offset] = 6;
                mem1[400*offset] = 6;
                mem1[401*offset] = 6;
                mem1[402*offset] = 6;
                mem1[403*offset] = 6;
                mem1[404*offset] = 6;
                mem1[405*offset] = 6;
                mem1[406*offset] = 6;
                mem1[407*offset] = 6;
                mem1[408*offset] = 6;
                mem1[409*offset] = 6;
                mem1[410*offset] = 6;
                mem1[411*offset] = 6;
                mem1[412*offset] = 6;
                mem1[413*offset] = 6;
                mem1[414*offset] = 6;
                mem1[415*offset] = 6;
                mem1[416*offset] = 6;
                mem1[417*offset] = 6;
                mem1[418*offset] = 6;
                mem1[419*offset] = 6;
                mem1[420*offset] = 6;
                mem1[421*offset] = 6;
                mem1[422*offset] = 6;
                mem1[423*offset] = 6;
                mem1[424*offset] = 6;
                mem1[425*offset] = 6;
                mem1[426*offset] = 6;
                mem1[427*offset] = 6;
                mem1[428*offset] = 6;
                mem1[429*offset] = 6;
                mem1[430*offset] = 6;
                mem1[431*offset] = 6;
                mem1[432*offset] = 6;
                mem1[433*offset] = 6;
                mem1[434*offset] = 6;
                mem1[435*offset] = 6;
                mem1[436*offset] = 6;
                mem1[437*offset] = 6;
                mem1[438*offset] = 6;
                mem1[439*offset] = 6;
                mem1[440*offset] = 6;
                mem1[441*offset] = 6;
                mem1[442*offset] = 6;
                mem1[443*offset] = 6;
                mem1[444*offset] = 6;
                mem1[445*offset] = 6;
                mem1[446*offset] = 6;
                mem1[447*offset] = 6;
                mem1[448*offset] = 6;
                mem1[449*offset] = 6;
                mem1[450*offset] = 6;
                mem1[451*offset] = 6;
                mem1[452*offset] = 6;
                mem1[453*offset] = 6;
                mem1[454*offset] = 6;
                mem1[455*offset] = 6;
                mem1[456*offset] = 6;
                mem1[457*offset] = 6;
                mem1[458*offset] = 6;
                mem1[459*offset] = 6;
                mem1[460*offset] = 6;
                mem1[461*offset] = 6;
                mem1[462*offset] = 6;
                mem1[463*offset] = 6;
                mem1[464*offset] = 6;
                mem1[465*offset] = 6;
                mem1[466*offset] = 6;
                mem1[467*offset] = 6;
                mem1[468*offset] = 6;
                mem1[469*offset] = 6;
                mem1[470*offset] = 6;
                mem1[471*offset] = 6;
                mem1[472*offset] = 6;
                mem1[473*offset] = 6;
                mem1[474*offset] = 6;
                mem1[475*offset] = 6;
                mem1[476*offset] = 6;
                mem1[477*offset] = 6;
                mem1[478*offset] = 6;
                mem1[479*offset] = 6;
                mem1[480*offset] = 6;
                mem1[481*offset] = 6;
                mem1[482*offset] = 6;
                mem1[483*offset] = 6;
                mem1[484*offset] = 6;
                mem1[485*offset] = 6;
                mem1[486*offset] = 6;
                mem1[487*offset] = 6;
                mem1[488*offset] = 6;
                mem1[489*offset] = 6;
                mem1[490*offset] = 6;
                mem1[491*offset] = 6;
                mem1[492*offset] = 6;
                mem1[493*offset] = 6;
                mem1[494*offset] = 6;
                mem1[495*offset] = 6;
                mem1[496*offset] = 6;
                mem1[497*offset] = 6;
                mem1[498*offset] = 6;
                mem1[499*offset] = 6;
          end1 = end_timer();
          double cycles = end1 - start1;
          double seconds = cycles/(2.8*1024*1024*1024);
          write_delay += seconds;
          delete mem1;
          //    }else{
          uint64_t start, end;
          int in;
          int *mem = new int[(int)pow(2, 30)];
          index = 0;
          for(int i = 0; i < (int)pow(2,11); i++){
               mem[index] = 0;
               index += 1024*512;
          } 
          start = start_timer();
          in = mem[0+1];
          in = mem[offset+1];
          in = mem[2*offset+1];
          in = mem[3*offset+1];
          in = mem[4*offset+1];
          in = mem[5*offset+1];
          in = mem[6*offset+1];
          in = mem[7*offset+1];
          in = mem[8*offset+1];
          in = mem[9*offset+1];
          in = mem[10*offset+1];
          in = mem[11*offset+1];
          in = mem[12*offset+1];
          in = mem[13*offset+1];
          in = mem[14*offset+1];
          in = mem[15*offset+1];
          in = mem[16*offset+1];
          in = mem[17*offset+1];
          in = mem[18*offset+1];
          in = mem[19*offset+1];
          in = mem[20*offset+1];
          in = mem[21*offset+1];
          in = mem[22*offset+1];
          in = mem[23*offset+1];
          in = mem[24*offset+1];
          in = mem[25*offset+1];
          in = mem[26*offset+1];
          in = mem[27*offset+1];
          in = mem[28*offset+1];
          in = mem[29*offset+1];
          in = mem[30*offset+1];
          in = mem[31*offset+1];
          in = mem[32*offset+1];
          in = mem[33*offset+1];
          in = mem[34*offset+1];
          in = mem[35*offset+1];
          in = mem[36*offset+1];
          in = mem[37*offset+1];
          in = mem[38*offset+1];
          in = mem[39*offset+1];
          in = mem[40*offset+1];
          in = mem[41*offset+1];
          in = mem[42*offset+1];
          in = mem[43*offset+1];
          in = mem[44*offset+1];
          in = mem[45*offset+1];
          in = mem[46*offset+1];
          in = mem[47*offset+1];
          in = mem[48*offset+1];
          in = mem[49*offset+1];
                in = mem[50*offset+1];
                in = mem[51*offset+1];
                in = mem[52*offset+1];
                in = mem[53*offset+1];
                in = mem[54*offset+1];
                in = mem[55*offset+1];
                in = mem[56*offset+1];
                in = mem[57*offset+1];
                in = mem[58*offset+1];
                in = mem[59*offset+1];
                in = mem[60*offset+1];
                in = mem[61*offset+1];
                in = mem[62*offset+1];
                in = mem[63*offset+1];
                in = mem[64*offset+1];
                in = mem[65*offset+1];
                in = mem[66*offset+1];
                in = mem[67*offset+1];
                in = mem[68*offset+1];
                in = mem[69*offset+1];
                in = mem[70*offset+1];
                in = mem[71*offset+1];
                in = mem[72*offset+1];
                in = mem[73*offset+1];
                in = mem[74*offset+1];
                in = mem[75*offset+1];
                in = mem[76*offset+1];
                in = mem[77*offset+1];
                in = mem[78*offset+1];
                in = mem[79*offset+1];
                in = mem[80*offset+1];
                in = mem[81*offset+1];
                in = mem[82*offset+1];
                in = mem[83*offset+1];
                in = mem[84*offset+1];
                in = mem[85*offset+1];
                in = mem[86*offset+1];
                in = mem[87*offset+1];
                in = mem[88*offset+1];
                in = mem[89*offset+1];
                in = mem[90*offset+1];
                in = mem[91*offset+1];
                in = mem[92*offset+1];
                in = mem[93*offset+1];
                in = mem[94*offset+1];
                in = mem[95*offset+1];
                in = mem[96*offset+1];
                in = mem[97*offset+1];
                in = mem[98*offset+1];
                in = mem[99*offset+1];
                in = mem[100*offset+1];
                in = mem[101*offset+1];
                in = mem[102*offset+1];
                in = mem[103*offset+1];
                in = mem[104*offset+1];
                in = mem[105*offset+1];
                in = mem[106*offset+1];
                in = mem[107*offset+1];
                in = mem[108*offset+1];
                in = mem[109*offset+1];
                in = mem[110*offset+1];
                in = mem[111*offset+1];
                in = mem[112*offset+1];
                in = mem[113*offset+1];
                in = mem[114*offset+1];
                in = mem[115*offset+1];
                in = mem[116*offset+1];
                in = mem[117*offset+1];
                in = mem[118*offset+1];
                in = mem[119*offset+1];
                in = mem[120*offset+1];
                in = mem[121*offset+1];
                in = mem[122*offset+1];
                in = mem[123*offset+1];
                in = mem[124*offset+1];
                in = mem[125*offset+1];
                in = mem[126*offset+1];
                in = mem[127*offset+1];
                in = mem[128*offset+1];
                in = mem[129*offset+1];
                in = mem[130*offset+1];
                in = mem[131*offset+1];
                in = mem[132*offset+1];
                in = mem[133*offset+1];
                in = mem[134*offset+1];
                in = mem[135*offset+1];
                in = mem[136*offset+1];
                in = mem[137*offset+1];
                in = mem[138*offset+1];
                in = mem[139*offset+1];
                in = mem[140*offset+1];
                in = mem[141*offset+1];
                in = mem[142*offset+1];
                in = mem[143*offset+1];
                in = mem[144*offset+1];
                in = mem[145*offset+1];
                in = mem[146*offset+1];
                in = mem[147*offset+1];
                in = mem[148*offset+1];
                in = mem[149*offset+1];
                in = mem[150*offset+1];
                in = mem[151*offset+1];
                in = mem[152*offset+1];
                in = mem[153*offset+1];
                in = mem[154*offset+1];
                in = mem[155*offset+1];
                in = mem[156*offset+1];
                in = mem[157*offset+1];
                in = mem[158*offset+1];
                in = mem[159*offset+1];
                in = mem[160*offset+1];
                in = mem[161*offset+1];
                in = mem[162*offset+1];
                in = mem[163*offset+1];
                in = mem[164*offset+1];
                in = mem[165*offset+1];
                in = mem[166*offset+1];
                in = mem[167*offset+1];
                in = mem[168*offset+1];
                in = mem[169*offset+1];
                in = mem[170*offset+1];
                in = mem[171*offset+1];
                in = mem[172*offset+1];
                in = mem[173*offset+1];
                in = mem[174*offset+1];
                in = mem[175*offset+1];
                in = mem[176*offset+1];
                in = mem[177*offset+1];
                in = mem[178*offset+1];
                in = mem[179*offset+1];
                in = mem[180*offset+1];
                in = mem[181*offset+1];
                in = mem[182*offset+1];
                in = mem[183*offset+1];
                in = mem[184*offset+1];
                in = mem[185*offset+1];
                in = mem[186*offset+1];
                in = mem[187*offset+1];
                in = mem[188*offset+1];
                in = mem[189*offset+1];
                in = mem[190*offset+1];
                in = mem[191*offset+1];
                in = mem[192*offset+1];
                in = mem[193*offset+1];
                in = mem[194*offset+1];
                in = mem[195*offset+1];
                in = mem[196*offset+1];
                in = mem[197*offset+1];
                in = mem[198*offset+1];
                in = mem[199*offset+1];
                in = mem[200*offset+1];
                in = mem[201*offset+1];
                in = mem[202*offset+1];
                in = mem[203*offset+1];
                in = mem[204*offset+1];
                in = mem[205*offset+1];
                in = mem[206*offset+1];
                in = mem[207*offset+1];
                in = mem[208*offset+1];
                in = mem[209*offset+1];
                in = mem[210*offset+1];
                in = mem[211*offset+1];
                in = mem[212*offset+1];
                in = mem[213*offset+1];
                in = mem[214*offset+1];
                in = mem[215*offset+1];
                in = mem[216*offset+1];
                in = mem[217*offset+1];
                in = mem[218*offset+1];
                in = mem[219*offset+1];
                in = mem[220*offset+1];
                in = mem[221*offset+1];
                in = mem[222*offset+1];
                in = mem[223*offset+1];
                in = mem[224*offset+1];
                in = mem[225*offset+1];
                in = mem[226*offset+1];
                in = mem[227*offset+1];
                in = mem[228*offset+1];
                in = mem[229*offset+1];
                in = mem[230*offset+1];
                in = mem[231*offset+1];
                in = mem[232*offset+1];
                in = mem[233*offset+1];
                in = mem[234*offset+1];
                in = mem[235*offset+1];
                in = mem[236*offset+1];
                in = mem[237*offset+1];
                in = mem[238*offset+1];
                in = mem[239*offset+1];
                in = mem[240*offset+1];
                in = mem[241*offset+1];
                in = mem[242*offset+1];
                in = mem[243*offset+1];
                in = mem[244*offset+1];
                in = mem[245*offset+1];
                in = mem[246*offset+1];
                in = mem[247*offset+1];
                in = mem[248*offset+1];
                in = mem[249*offset+1];
                in = mem[250*offset+1];
                in = mem[251*offset+1];
                in = mem[252*offset+1];
                in = mem[253*offset+1];
                in = mem[254*offset+1];
                in = mem[255*offset+1];
                in = mem[256*offset+1];
                in = mem[257*offset+1];
                in = mem[258*offset+1];
                in = mem[259*offset+1];
                in = mem[260*offset+1];
                in = mem[261*offset+1];
                in = mem[262*offset+1];
                in = mem[263*offset+1];
                in = mem[264*offset+1];
                in = mem[265*offset+1];
                in = mem[266*offset+1];
                in = mem[267*offset+1];
                in = mem[268*offset+1];
                in = mem[269*offset+1];
                in = mem[270*offset+1];
                in = mem[271*offset+1];
                in = mem[272*offset+1];
                in = mem[273*offset+1];
                in = mem[274*offset+1];
                in = mem[275*offset+1];
                in = mem[276*offset+1];
                in = mem[277*offset+1];
                in = mem[278*offset+1];
                in = mem[279*offset+1];
                in = mem[280*offset+1];
                in = mem[281*offset+1];
                in = mem[282*offset+1];
                in = mem[283*offset+1];
                in = mem[284*offset+1];
                in = mem[285*offset+1];
                in = mem[286*offset+1];
                in = mem[287*offset+1];
                in = mem[288*offset+1];
                in = mem[289*offset+1];
                in = mem[290*offset+1];
                in = mem[291*offset+1];
                in = mem[292*offset+1];
                in = mem[293*offset+1];
                in = mem[294*offset+1];
                in = mem[295*offset+1];
                in = mem[296*offset+1];
                in = mem[297*offset+1];
                in = mem[298*offset+1];
                in = mem[299*offset+1];
                in = mem[300*offset+1];
                in = mem[301*offset+1];
                in = mem[302*offset+1];
                in = mem[303*offset+1];
                in = mem[304*offset+1];
                in = mem[305*offset+1];
                in = mem[306*offset+1];
                in = mem[307*offset+1];
                in = mem[308*offset+1];
                in = mem[309*offset+1];
                in = mem[310*offset+1];
                in = mem[311*offset+1];
                in = mem[312*offset+1];
                in = mem[313*offset+1];
                in = mem[314*offset+1];
                in = mem[315*offset+1];
                in = mem[316*offset+1];
                in = mem[317*offset+1];
                in = mem[318*offset+1];
                in = mem[319*offset+1];
                in = mem[320*offset+1];
                in = mem[321*offset+1];
                in = mem[322*offset+1];
                in = mem[323*offset+1];
                in = mem[324*offset+1];
                in = mem[325*offset+1];
                in = mem[326*offset+1];
                in = mem[327*offset+1];
                in = mem[328*offset+1];
                in = mem[329*offset+1];
                in = mem[330*offset+1];
                in = mem[331*offset+1];
                in = mem[332*offset+1];
                in = mem[333*offset+1];
                in = mem[334*offset+1];
                in = mem[335*offset+1];
                in = mem[336*offset+1];
                in = mem[337*offset+1];
                in = mem[338*offset+1];
                in = mem[339*offset+1];
                in = mem[340*offset+1];
                in = mem[341*offset+1];
                in = mem[342*offset+1];
                in = mem[343*offset+1];
                in = mem[344*offset+1];
                in = mem[345*offset+1];
                in = mem[346*offset+1];
                in = mem[347*offset+1];
                in = mem[348*offset+1];
                in = mem[349*offset+1];
                in = mem[350*offset+1];
                in = mem[351*offset+1];
                in = mem[352*offset+1];
                in = mem[353*offset+1];
                in = mem[354*offset+1];
                in = mem[355*offset+1];
                in = mem[356*offset+1];
                in = mem[357*offset+1];
                in = mem[358*offset+1];
                in = mem[359*offset+1];
                in = mem[360*offset+1];
                in = mem[361*offset+1];
                in = mem[362*offset+1];
                in = mem[363*offset+1];
                in = mem[364*offset+1];
                in = mem[365*offset+1];
                in = mem[366*offset+1];
                in = mem[367*offset+1];
                in = mem[368*offset+1];
                in = mem[369*offset+1];
                in = mem[370*offset+1];
                in = mem[371*offset+1];
                in = mem[372*offset+1];
                in = mem[373*offset+1];
                in = mem[374*offset+1];
                in = mem[375*offset+1];
                in = mem[376*offset+1];
                in = mem[377*offset+1];
                in = mem[378*offset+1];
                in = mem[379*offset+1];
                in = mem[380*offset+1];
                in = mem[381*offset+1];
                in = mem[382*offset+1];
                in = mem[383*offset+1];
                in = mem[384*offset+1];
                in = mem[385*offset+1];
                in = mem[386*offset+1];
                in = mem[387*offset+1];
                in = mem[388*offset+1];
                in = mem[389*offset+1];
                in = mem[390*offset+1];
                in = mem[391*offset+1];
                in = mem[392*offset+1];
                in = mem[393*offset+1];
                in = mem[394*offset+1];
                in = mem[395*offset+1];
                in = mem[396*offset+1];
                in = mem[397*offset+1];
                in = mem[398*offset+1];
                in = mem[399*offset+1];
                in = mem[400*offset+1];
                in = mem[401*offset+1];
                in = mem[402*offset+1];
                in = mem[403*offset+1];
                in = mem[404*offset+1];
                in = mem[405*offset+1];
                in = mem[406*offset+1];
                in = mem[407*offset+1];
                in = mem[408*offset+1];
                in = mem[409*offset+1];
                in = mem[410*offset+1];
                in = mem[411*offset+1];
                in = mem[412*offset+1];
                in = mem[413*offset+1];
                in = mem[414*offset+1];
                in = mem[415*offset+1];
                in = mem[416*offset+1];
                in = mem[417*offset+1];
                in = mem[418*offset+1];
                in = mem[419*offset+1];
                in = mem[420*offset+1];
                in = mem[421*offset+1];
                in = mem[422*offset+1];
                in = mem[423*offset+1];
                in = mem[424*offset+1];
                in = mem[425*offset+1];
                in = mem[426*offset+1];
                in = mem[427*offset+1];
                in = mem[428*offset+1];
                in = mem[429*offset+1];
                in = mem[430*offset+1];
                in = mem[431*offset+1];
                in = mem[432*offset+1];
                in = mem[433*offset+1];
                in = mem[434*offset+1];
                in = mem[435*offset+1];
                in = mem[436*offset+1];
                in = mem[437*offset+1];
                in = mem[438*offset+1];
                in = mem[439*offset+1];
                in = mem[440*offset+1];
                in = mem[441*offset+1];
                in = mem[442*offset+1];
                in = mem[443*offset+1];
                in = mem[444*offset+1];
                in = mem[445*offset+1];
                in = mem[446*offset+1];
                in = mem[447*offset+1];
                in = mem[448*offset+1];
                in = mem[449*offset+1];
                in = mem[450*offset+1];
                in = mem[451*offset+1];
                in = mem[452*offset+1];
                in = mem[453*offset+1];
                in = mem[454*offset+1];
                in = mem[455*offset+1];
                in = mem[456*offset+1];
                in = mem[457*offset+1];
                in = mem[458*offset+1];
                in = mem[459*offset+1];
                in = mem[460*offset+1];
                in = mem[461*offset+1];
                in = mem[462*offset+1];
                in = mem[463*offset+1];
                in = mem[464*offset+1];
                in = mem[465*offset+1];
                in = mem[466*offset+1];
                in = mem[467*offset+1];
                in = mem[468*offset+1];
                in = mem[469*offset+1];
                in = mem[470*offset+1];
                in = mem[471*offset+1];
                in = mem[472*offset+1];
                in = mem[473*offset+1];
                in = mem[474*offset+1];
                in = mem[475*offset+1];
                in = mem[476*offset+1];
                in = mem[477*offset+1];
                in = mem[478*offset+1];
                in = mem[479*offset+1];
                in = mem[480*offset+1];
                in = mem[481*offset+1];
                in = mem[482*offset+1];
                in = mem[483*offset+1];
                in = mem[484*offset+1];
                in = mem[485*offset+1];
                in = mem[486*offset+1];
                in = mem[487*offset+1];
                in = mem[488*offset+1];
                in = mem[489*offset+1];
                in = mem[490*offset+1];
                in = mem[491*offset+1];
                in = mem[492*offset+1];
                in = mem[493*offset+1];
                in = mem[494*offset+1];
                in = mem[495*offset+1];
                in = mem[496*offset+1];
                in = mem[497*offset+1];
                in = mem[498*offset+1];
                in = mem[499*offset+1];
          end = end_timer();
          cycles = (double)(end-start);
          seconds = (double)cycles/(2.8*1024*1024*1024);
          read_delay += seconds; 
          delete mem;
     }
     double avg_write = (double)50000.0*4.0/write_delay;
     double avg_read = (double)50000.0*4.0/read_delay;
     std::cout << "avg read bandwidth is: " << avg_read << endl;
     std::cout << "avg write bandwidth is: " << avg_write << endl;
     //    }
     return 0; 
}
